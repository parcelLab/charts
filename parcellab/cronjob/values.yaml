env: "prod" # The cronjob environment

name: "cronjob" # The cronjob name

orgRepository: "ghcr.io/parcellab" # The organization docker repository

##
## Cronjobs
##

cronjob:
  enabled: true
  concurrencyPolicy: "Allow"
  failedJobsHistoryLimit: 1
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 3
  suspend: false
  job:
    activeDeadlineSeconds: 900 # 15 minutes
    backoffLimit: 2

extraCronjobs:
# - name: mycronjob
#   command:
#   - /bin/sh
#   - -c
#   - date; echo Hello from the Kubernetes cluster
#   concurrencyPolicy: "Allow"
#   failedJobsHistoryLimit: 1
#   schedule: "* * * * *"
#   successfulJobsHistoryLimit: 3
#   suspend: false

##
## Configuration
##

# Create a configmap whose attributes will be loaded to the container as
# environment variables using the values defined here
config: {}

# Create a secret whose attributes will be loaded to the container as
# environment variables using the external-secrets project and an already
# configured secret store reference
# See https://external-secrets.io/latest/spec/#external-secrets.io/v1beta1.ExternalSecretSpec
externalSecret:
  {}
  # dataFrom:
  #   - extract:
  #       key: app-key-in-secrets-manager

##
## Pod
##

affinity: {}

datadog:
  enabled: true

imagePullSecrets:
  - name: github-docker

nodeSelector: {}

podAnnotations: {}

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

tolerations: []

volumes: []

##
## Container
##

command:
# - /bin/sh
# - -c
# - date; echo Hello from the Kubernetes cluster

image:
  # repository: nginx  # Will apply if orgRepository and name is not defined
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: stable

containerEnv: []
# - name: MY_ENV_VAR
#   value: "myvalue"

podSecurityContext:
  {}
  # fsGroup: 2000

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

##
## Postgresql
##

postgresql:
  enabled: false
  # See default values: https://artifacthub.io/packages/helm/bitnami/postgresql?modal=values

##
## Redis
##

redis:
  enabled: false
  # See default values: https://artifacthub.io/packages/helm/bitnami/redis?modal=values
