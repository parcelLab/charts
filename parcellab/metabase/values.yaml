env: prod
name: metabase
orgRepository: metabase

##
## Service
##

service:
  name: http
  port: 3000
  targetPort: http
  protocol: TCP
  type: ClusterIP

##
## Ingress
##

ingress:
  enabled: false
  className: "nginx"
  annotations:
    # kubernetes.io/tls-acme: "true"
  hosts:
    []
    # - host: app
    #   paths:
    #     - path: /
    #       pathType: Prefix
    #       port: 3000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

##
## Configuration
##

# Create a configmap whose attributes will be loaded to the container as
# environment variables using the values defined here
config: {}

# Create a secret whose attributes will be loaded to the container as
# environment variables using the external-secrets project and an already
# configured secret store reference
# See https://external-secrets.io/latest/spec/#external-secrets.io/v1beta1.ExternalSecretSpec
externalSecret:
  {}
  # dataFrom:
  #   - extract:
  #       key: app-key-in-secrets-manager

##
## Pod
##

affinity: {}

datadog:
  enabled: true

nodeSelector: {}

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

replicaCount: 1

tolerations: []

volumes: []

##
## Container
##

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.44.0
  # TODO IMAGE NAME

containerEnv: []
# - name: MY_ENV_VAR
#   value: "myvalue"

podSecurityContext:
  {}
  # fsGroup: 2000

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi
# livenessProbe:
#   httpGet:
#     path: /
#     port: http

# readinessProbe:
#   httpGet:
#     path: /
#     port: http
