name: Release

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/release.yaml
      - parcellab/**
      - "!parcellab/**/Chart.yaml"
      - "!**.md"
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.generate-matrix.outputs.charts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load repos configuration file
        id: generate-matrix
        run: |
          export CHARTS=$(ls -d parcellab/* | awk ' BEGIN { ORS = ""; print "["; } { print "\/\@"$0"\/\@"; } END { print "]"; }' | sed "s^\"^\\\\\"^g;s^\/\@\/\@^\", \"^g;s^\/\@^\"^g")
          echo "::set-output name=charts::$CHARTS"
  test:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ${{ fromJSON(needs.matrix.outputs.charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update dependencies
        run: helm dependency update ${{ matrix.chart }}

      - name: Lint chart
        run: helm lint ${{ matrix.chart }}

      - name: Template chart
        run: |
          helm show chart ${{ matrix.chart }} | grep "type: library" || helm template ${{ matrix.chart }} > output.yaml

      - if: matrix.chart != 'parcellab/common'
        name: Evaluate k8s resources
        uses: instrumenta/kubeval-action@master
        with:
          files: output.yaml
          strict: false
  release:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PARCELLAB_BOT_APPID }}
          private-key: ${{ secrets.PARCELLAB_BOT_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Check changed files
        id: check_files
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD)
          if echo "${changed_files}" | grep -qE '^parcellab/'; then
            echo "skip=false" >> $GITHUB_ENV
          else
            echo "skip=true" >> $GITHUB_ENV
          fi
          echo "changed_files=$changed_files" >> $GITHUB_ENV

      - name: Configure Git
        if: steps.check_files.outputs.skip == 'false'
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Bump version
        if: steps.check_files.outputs.skip == 'false'
        run: |
          for file in ${{ env.changed_files }}; do
            if [[ $file == parcellab/common/* ]]; then
              find parcellab -name Chart.yaml | while read chart_file; do
                chart_dir=$(dirname "$chart_file")
                echo "Processing $chart_file"
                version=$(grep 'version:' $chart_file | cut -d ' ' -f 2)
                version_bump=$(echo "$version" | awk -F. '{if ($NF == 99) {$(NF-1) += 1; $NF = 0} else {$NF += 1}} 1' | sed 's/ /./g')
                sed -i "s/version: $version/version: $version_bump/g" $chart_file
              done
              break
            elif [[ $file == parcellab/*/* ]]; then
              chart_dir=$(dirname "$file")
              chart_file="$chart_dir/Chart.yaml"
              if [[ -f $chart_file ]]; then
                echo "Processing $chart_file"
                version=$(grep 'version:' $chart_file | cut -d ' ' -f 2)
                version_bump=$(echo "$version" | awk -F. '{if ($NF == 99) {$(NF-1) += 1; $NF = 0} else {$NF += 1}} 1' | sed 's/ /./g')
                sed -i "s/version: $version/version: $version_bump/g" $chart_file
              fi
            fi
          done
          git commit -am "Bump version"
          git push

      - name: Add Helm repository
        if: steps.check_files.outputs.skip == 'false'
        run: helm repo add parcellab https://charts.parcellab.dev

      - name: Update Helm repository
        if: steps.check_files.outputs.skip == 'false'
        run: helm repo update

      - name: Run chart-releaser library
        if: steps.check_files.outputs.skip == 'false'
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: parcellab
          charts_repo_url: https://charts.parcellab.dev
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
