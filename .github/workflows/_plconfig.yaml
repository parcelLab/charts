################################################################################
#                     DO NOT EDIT THIS FILE (Auto-Generated)                   #
# Contents of this file were generated by https://github.com/parcelLab/.github #
# Changes to this file may be overwritten.                                     #
################################################################################
name: ~Lib / parcelLab Config
on:
  workflow_call:
    inputs:
      botEmail:
        required: false
        description: The email of the bot that will appear in the GitOps commit
        default: dev.bot@parcellab.com
        type: string
      botName:
        required: false
        description: The name of the bot that will appear in the GitOps commit
        default: parcellab-dev-bot
        type: string
      deploymentRepoPath:
        required: false
        description: The path within the deployment repository that holds all version files
        default: namespaces
        type: string
      deploymentRepoURL:
        required: false
        description: The repository within Github that holds the version file to deploy via GitOps
        default: parcelLab/deployment
        type: string
jobs:
  plconfig:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current git repository
        uses: actions/checkout@v3
      # Load plconfig.yaml global deployment settings
      - name: Load name
        id: name
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: yq ".deployment.name" plconfig.yaml
      - name: Load namespace
        id: namespace
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: yq ".deployment.namespace" plconfig.yaml
      - name: Load chart
        id: chart
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: yq ".deployment.chart" plconfig.yaml
      - name: Checkout ${{ inputs.deploymentRepoURL }} git repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.deploymentRepoURL }}
          path: remote
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: main
      - name: Load vars
        id: vars
        run: |
          echo "::set-output name=namespace-path::remote/${{ inputs.deploymentRepoPath }}/${{ steps.namespace.outputs.result }}"
          echo "::set-output name=do-not-edit::DO NOT EDIT. Auto generated from ${{ steps.name.outputs.result }} plconfig.yaml (replaces values.yaml instead)"
      # Load plconfig values without scoping to a subchart
      - name: Load external values for all environments
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: >-
            yq '.deployment.values.dev | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/dev/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '.deployment.values.prod | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/prod/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '.deployment.values.staging | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/staging/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '.deployment.values.test | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/test/${{ steps.name.outputs.result }}/values-external.yaml
      # Load plconfig values scoping to a subchart
      - name: Load external values for all environments
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: >-
            yq '{ "${{ steps.chart.outputs.result }}": .deployment.values.dev } | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/dev/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '{ "${{ steps.chart.outputs.result }}": .deployment.values.prod } | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/prod/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '{ "${{ steps.chart.outputs.result }}": .deployment.values.staging } | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/staging/${{ steps.name.outputs.result }}/values-external.yaml &&
            yq '{ "${{ steps.chart.outputs.result }}": .deployment.values.test } | . head_comment="${{ steps.vars.outputs.do-not-edit }}"' plconfig.yaml > ${{ steps.vars.outputs.namespace-path }}/test/${{ steps.name.outputs.result }}/values-external.yaml
      # Commit & Push
      - name: Commit deployment files
        run: |
          cd remote
          git config --global user.email "${{ inputs.botEmail }}"
          git config --global user.name "${{ inputs.botName }}"
          git add .
          git commit --allow-empty -m "chore(${{ steps.name.outputs.result }}): set parcelLab config values"
      - name: Push changes to main in ${{ inputs.deploymentRepoURL }} git repository
        uses: ad-m/github-push-action@v0.6.0
        with:
          repository: ${{ inputs.deploymentRepoURL }}
          directory: remote
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          branch: main
          force: true
